{"version":3,"sources":["components/navigation/TopNavigation.tsx","components/sortingComponents/MergeSort.tsx","components/sortingComponents/HeapSort.tsx","components/sortingComponents/InsertionSort.tsx","components/sortingComponents/BubbleSort.tsx","components/sortingComponents/selectionSort.tsx","components/sortingComponents/QuickSort.tsx","components/main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TopNavigation","props","changeSize","event","setState","value","target","sendData","type","state","method","gerateArray","startSort","startSorting","changeType","updateData","changeSpeed","parseInt","className","onClick","this","onChange","id","Component","MergeSort","arr","console","log","length","left","right","mid","Math","floor","mergeSort","slice","sorted","push","shift","concat","toCreateElements","array","i","j","getChild","HeapSort","toStart","heapSort","largest","heapify","k","undefined","timer","setInterval","next","InsertionSort","interval","toSort","start","sort","len","temp","clearInterval","BubbleSort","gen","SelectionSort","tempIndex","index","minElement","QuickSort","items","leftIndex","rightIndex","pivot","swap","setTimeout","partition","quickSort","Main","arrayItems","sortElement","heapRefElement","InsertionSortRefElement","bubbleSortRefElement","selectionSortRefElement","quickSortRefElement","callMergeSort","element","heapSortRef","insertionSortRef","bubbleSort","selectionSortRef","quickSortRef","toViewCallBack","createStyles","arrayToView","object","randomArray","sortInfo","highlights","cases","map","key","style","data-toggle","data-placement","title","createRandomArray","first","second","styledArray","obj","height","width","background","listStyle","data","toCall","round","random","ref","App","refElement","setRef","getData","receivedvalue","toMainStart","callSort","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.456fe316.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport './styles.scss';\r\n\r\ninterface IMyComponentProps {\r\n    sendData:any\r\n    startSorting:any\r\n    updateData:any\r\n}\r\n\r\ninterface IMyComponentState {\r\n    value: any;\r\n    type:any;\r\n    method:any;\r\n}\r\nexport class TopNavigation extends Component <IMyComponentProps, IMyComponentState> {\r\n    \r\n    constructor(props:IMyComponentProps) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             value : 50,\r\n             type:100,\r\n             method:'Insertion Sort'\r\n        } \r\n    }\r\n\r\n    changeSize = (event:any) => {\r\n        this.setState({value:event.target.value});\r\n        this.props.sendData({            \r\n            value : event.target.value,\r\n            type: this.state.type,\r\n            method: this.state.method})\r\n    }\r\n    gerateArray = () => {\r\n        this.props.sendData(this.state)\r\n    }\r\n    startSort = () => {\r\n        this.props.startSorting()\r\n    }\r\n    changeType = (event:any) => {\r\n        this.setState({method:event.target.value})\r\n        this.props.updateData({            \r\n            value : this.state.value,\r\n            type:this.state.type,\r\n            method:event.target.value})\r\n    }\r\n    changeSpeed = (event:any) => { \r\n        this.setState({type:parseInt(event.target.value)}) \r\n        this.props.updateData({            \r\n            value : this.state.value,\r\n            type:parseInt(event.target.value),\r\n            method: this.state.method})\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className='d-flex justify-content-around'>\r\n                <button className='my-auto px-3' onClick={this.gerateArray}>Generate new Array</button>\r\n                <section className='d-flex'>\r\n                    <label className='my-auto mr-3' >Enter number of Elements in Array</label>\r\n                    <input type='text' className='formControl' value={this.state.value} onChange={this.changeSize} />\r\n                </section>\r\n                <section className='d-flex'>\r\n                    <label className='my-auto mr-2'>Speed:</label>\r\n                    <select className='pr-3' id='speed' value ={this.state.type} onChange = {this.changeSpeed}>\r\n                        <option value={1000} >Slow</option>\r\n                        <option value={100}>Medium</option>\r\n                        <option value={10}>Fast</option>\r\n                    </select>\r\n                </section>\r\n                <section className='d-flex'>\r\n                    <label className='my-auto mr-2'>sort Type:</label>\r\n                    <select className='d-flex justify-content-around text-decoration-none mb-0 pr-1' value={this.state.method} onChange = {this.changeType}>\r\n                        <option value='Bubble Sort'>Bubble sort</option>\r\n                        <option value='Heap Sort'>Heap sort</option>\r\n                        <option value='Insertion Sort'>Insertion sort</option>\r\n                        <option value='Merge Sort'>Merge sort</option>\r\n                        <option value='Quick Sort'>Quick sort</option>\r\n                        <option value='selection Sort'>Selection sort</option>\r\n                    </select>\r\n                </section>\r\n                <button className='my-auto px-3'onClick={this.startSort} >Start</button>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopNavigation\r\n","import React, { Component } from 'react';\r\n\r\ninterface IMyComponentProps {\r\n  getChild:any;\r\n}\r\n\r\ninterface IMyComponentState {\r\n    sortedData:any;\r\n}\r\n\r\nexport class MergeSort extends Component <IMyComponentProps, IMyComponentState> {\r\n\r\n  mergeSort (arr:any):any {\r\n    console.log(\"Merge sort is under development. in next submit will work properly.\")\r\n    if (arr.length <= 1) return arr;\r\n    let mid = Math.floor(arr.length / 2),left,right;\r\n    left = this.mergeSort(arr.slice(0, mid))\r\n    right = this.mergeSort(arr.slice(mid))\r\n    let sorted = [];\r\n    while (left.length && right.length) {\r\n      if (left[0] < right[0]) sorted.push(left.shift());\r\n      else sorted.push(right.shift());\r\n    };\r\n    const value = sorted.concat(left.slice().concat(right.slice()));\r\n    this.toCreateElements(value)\r\n    return value;\r\n  }\r\n  toCreateElements(array:any,i?:any,j?:any) {\r\n    i === array.length-2 &&j === 1 ? this.toCreateElements(array,-1,-1): this.props.getChild(array,i,j);\r\n  }\r\n  render() {\r\n      return (\r\n          <div>\r\n          </div>\r\n      )\r\n  }\r\n  // mozilla firefox and safari using marge sort as a default sorting algorithm.\r\n}\r\n// merge (arr1:any, arr2:any) {\r\n//   let sorted = [];\r\n\r\n//   while (arr1.length && arr2.length) {\r\n//     if (arr1[0] < arr2[0]) sorted.push(arr1.shift());\r\n//     else sorted.push(arr2.shift());\r\n//   };\r\n//   const value = sorted.concat(arr1.slice().concat(arr2.slice()));\r\n//   this.toCreateElements(value)\r\n//   console.log(value)\r\n//   return value;\r\n// };\r\n\r\n// mergeSort (arr:any):any {\r\n//   console.log(arr)\r\n//   if (arr.length <= 1) return arr;\r\n//   let mid = Math.floor(arr.length / 2),left,right;\r\n//   left = this.mergeSort(arr.slice(0, mid))\r\n//   right = this.mergeSort(arr.slice(mid))\r\n//   console.log(\"final call\");\r\n//   return this.merge(left,right);\r\n// }\r\nexport default MergeSort\r\n","import React, { Component } from 'react'\r\n\r\ninterface IMyComponentProps { getChild:any; }\r\n\r\nexport class HeapSort extends Component <IMyComponentProps> {\r\n   \r\n    array: any;\r\n    toStart:any = this.heapSort();\r\n    \r\n    constructor(props:IMyComponentProps) { super(props) }\r\n    heapify(arr:any,length:number,i:number) {\r\n        let largest = i;\r\n        let left = i * 2 + 1;\r\n        let right = left + 1;\r\n        if (left< length && arr[left] > arr[largest]) { largest = left }\r\n        if (right < length && arr[right] > arr [largest]) { largest = right}\r\n        if (largest != i) {\r\n            [arr[i],arr[largest]] = [arr[largest],arr[i]]\r\n            this.heapify(arr,length,largest);\r\n        }\r\n    }\r\n    *heapSort(arr?:any) {\r\n        arr = this.array;\r\n        let length = arr.length;\r\n        let i = Math.floor(length/2 - 1);\r\n        let k = length - 1;\r\n        while (i >= 0) {\r\n            this.heapify(arr,length,i)\r\n            i--;\r\n            this.toCreateElements(arr,k,i)\r\n            yield;\r\n        }\r\n        while(k >= 0) {\r\n            [arr[0],arr[k]] = [arr[k],arr[0]];\r\n            this.heapify(arr,k,0);\r\n            k--;\r\n            this.toCreateElements(arr,arr[0],k)\r\n            yield;\r\n        }\r\n        this.toCreateElements(arr,\"sorted\");\r\n        this.toStart = undefined;\r\n        return arr;\r\n    }\r\n    toCall(arr:any,timer:number) {\r\n        this.array = arr;\r\n        this.toStart = this.heapSort();\r\n        setInterval( () => {\r\n            if (this.toStart) {\r\n                this.toStart.next();\r\n            }\r\n        }, timer)\r\n    }\r\n    toCreateElements(array:any,i?:any,j?:any) {\r\n        if (i === \"sorted\") {\r\n            this.props.getChild(array,i,j)\r\n        }\r\n        else {\r\n            this.props.getChild(array,i,j)\r\n        }\r\n    }\r\n    render() {return (<></>)}\r\n}\r\n\r\nexport default HeapSort\r\n","import React, { Component } from 'react'\r\n\r\ninterface IMyComponentProps {getChild:any;}\r\n\r\nexport class InsertionSort extends Component <IMyComponentProps> {\r\n\r\n    interval:any; array = [];\r\n    toSort = this.start();\r\n    constructor(props:IMyComponentProps) { super(props) }\r\n    *start() {\r\n        let len = this.array.length;\r\n        for (let i=0;i<len-1;i++) {\r\n            this.toCreateElements(this.array,i,i+1)\r\n            if (this.array[i] > this.array[i+1]) {\r\n                let temp = this.array[i];\r\n                this.array[i] = this.array[i+1];\r\n                this.array[i+1] = temp;\r\n                this.toCreateElements(this.array,i,i+1)\r\n                yield;\r\n                for (let j= i;j>0;j--) {\r\n                    this.toCreateElements(this.array,j,j-1)\r\n                    if (this.array[j]<this.array[j-1]) {\r\n                        yield;\r\n                        let temp = this.array[j];\r\n                        this.array[j] = this.array[j-1];\r\n                        this.array[j-1] = temp;\r\n                    }\r\n                }\r\n            }\r\n        } clearInterval(this.interval);\r\n        this.toCreateElements(this.array,\"sorted\")\r\n        this.toSort = this.start();\r\n    }\r\n    sort = (array:any,timer:any) => {this.array = array; this.interval = setInterval ( () => this.toSort.next(),timer)}\r\n    toCreateElements = (array:any,i?:any,j?:any) => {this.props.getChild(array,i,j);}\r\n    render() {return (<></>)}\r\n    // chrome v8 engine uses this sort.\r\n}\r\nexport default InsertionSort\r\n","import React, { Component } from 'react'\r\n\r\ninterface IMyComponentProps {getChild:any;}\r\nexport class BubbleSort extends Component <IMyComponentProps> {\r\n    array: any = [];\r\n    interval: any;\r\n    sort:any = this.gen()\r\n    constructor(props:IMyComponentProps) {super(props)}\r\n    *gen(){   \r\n        let len = this.array.length;\r\n        for (let i=len;i>0;i--) {\r\n            for (let j=0;j<i;j++) {\r\n                yield;\r\n                if (this.array[j]>this.array[j+1]) {\r\n                    let temp = this.array[j];\r\n                    this.array[j] = this.array[j+1];\r\n                    this.array[j+1] = temp;\r\n                    this.toCreateElements(this.array,j,j+1)\r\n                    yield;\r\n                }\r\n                if (i === 1) {\r\n                    clearInterval(this.interval)\r\n                    this.toCreateElements(this.array,\"sorted\");\r\n                    this.sort = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    toSort(array:any,timer:any) {\r\n        this.sort = this.gen();\r\n        this.array = array;\r\n        this.interval = setInterval( () => {\r\n            if (this.sort) {\r\n                this.sort.next()\r\n            }\r\n        },timer)}\r\n    toCreateElements(array:any,i?:any,j?:any) {i === 1 && j === 0 ? this.toCreateElements(array,-1,-1): this.props.getChild(array,i,j);}\r\n    render() {return (<></>)}\r\n}\r\nexport default BubbleSort\r\n","import React, { Component } from 'react'\r\nimport { clearInterval } from 'timers';\r\n\r\n\r\ninterface IMyComponentProps {getChild:any;}\r\nexport class SelectionSort extends Component <IMyComponentProps> {\r\n\r\n    array: any; interval:any;\r\n    constructor(props:IMyComponentProps) {super(props)}\r\n    toSort:any = this.start();\r\n\r\n    *start () {\r\n        let len = this.array.length, minElement:any, tempIndex = 0, index:any = 0;\r\n        for (let j=0;j<len;j++) {\r\n            minElement = this.array[j];\r\n            for (let i=j;i<len;i++) {\r\n                yield;\r\n                if (minElement>this.array[i]){\r\n                    minElement = this.array[i];\r\n                    index = i;\r\n                }\r\n                // this.toCreateElements(this.array,i,j);\r\n            }\r\n            yield;\r\n            this.array[index] = this.array[tempIndex];\r\n            this.array[tempIndex] = minElement;\r\n            this.toCreateElements(this.array,index,j);\r\n            tempIndex++;\r\n        }\r\n        this.toCreateElements(this.array,\"sorted\");\r\n        this.toSort = undefined;\r\n    }\r\n    sort = (array:any,timer:any) => {\r\n        this.toSort = this.start();\r\n        this.array = array; \r\n        this.interval = setInterval ( () => {\r\n            if (this.toSort) {\r\n                this.toSort.next()\r\n            }\r\n        },timer)\r\n    }\r\n    toCreateElements(array:any,i?:any,j?:any) {\r\n            this.props.getChild(array,i,j)\r\n    }\r\n    render() {return (<></>)}\r\n}\r\n\r\nexport default SelectionSort\r\n","import React, { Component } from 'react'\r\n\r\ninterface IMyComponentProps {\r\n    getChild:any;\r\n  }\r\n\r\n\r\nexport class QuickSort extends Component <IMyComponentProps> {\r\n    array: any;\r\n    timer: number | undefined;\r\n    constructor(props:IMyComponentProps) {\r\n        super(props)\r\n    \r\n        this.state = {}\r\n    }\r\n    swap(items:any, leftIndex:any, rightIndex:any){\r\n        var temp = items[leftIndex];\r\n        items[leftIndex] = items[rightIndex];\r\n        items[rightIndex] = temp;\r\n        this.toCreateElements(items,leftIndex,rightIndex);\r\n    }\r\n    partition(items:any, left:any, right:any) {\r\n        var pivot   = items[Math.floor((right + left) / 2)], //middle element\r\n            i       = left, //left pointer\r\n            j       = right; //right pointer\r\n        while (i <= j) {\r\n            while (items[i] < pivot) {\r\n                i++;\r\n            }\r\n            while (items[j] > pivot) {\r\n                j--;\r\n            }\r\n            if (i <= j) {\r\n                this.swap(items, i, j); //sawpping two elements\r\n                i++;\r\n                j--;\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n    quickSort(items:any, left:any, right:any) {\r\n        var index;\r\n        if (items.length > 1) {\r\n            setTimeout(() => {\r\n                index = this.partition(items, left, right); //index returned from partition\r\n                if (left < index - 1) { //more elements on the left side of the pivot\r\n                    this.quickSort(items, left, index - 1);\r\n                }\r\n                if (index < right) { //more elements on the right side of the pivot\r\n                    this.quickSort(items, index, right);\r\n                }\r\n                console.log(items.length)\r\n            }, this.timer);\r\n        }\r\n    }\r\n    toCreateElements(array:any,i?:any,j?:any) {\r\n        this.props.getChild(array,i,j);\r\n    }\r\n    sort(array:any,timer:number) {\r\n        this.timer = timer;\r\n        this.quickSort(array,0,array.length -1)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuickSort\r\n","import React, { Component } from 'react'\r\nimport MergeSort from '../sortingComponents/MergeSort';\r\nimport HeapSort from '../sortingComponents/HeapSort';\r\nimport InsertionSort from '../sortingComponents/InsertionSort';\r\nimport BubbleSort from '../sortingComponents/BubbleSort';\r\nimport SelectionSort from '../sortingComponents/selectionSort';\r\nimport QuickSort from '../sortingComponents/QuickSort';\r\n\r\n\r\ninterface IMyComponentProps {}\r\n\r\ninterface IMyComponentState {\r\n    arrayToView:any;\r\n    object:Object;\r\n    randomArray:any;\r\n    sortInfo:{\r\n        highlights:[],\r\n        cases:[]\r\n    }\r\n}\r\n\r\nexport class Main extends Component <IMyComponentProps, IMyComponentState> {\r\n\r\n    arrayItems:any ;\r\n    sortElement:any;\r\n    heapRefElement: any;\r\n    InsertionSortRefElement: any;\r\n    bubbleSortRefElement: any;\r\n    selectionSortRefElement:any;\r\n    quickSortRefElement: any;\r\n\r\n    constructor(props:IMyComponentProps) {\r\n        super(props)\r\n        this.state = {\r\n            arrayToView:this.arrayItems,\r\n            object: {\r\n                value:50,\r\n                type:100,\r\n                method: \"Insertion Sort\"\r\n            },\r\n            randomArray:[],\r\n            sortInfo:{\r\n                highlights:[],\r\n                cases:[]\r\n            }\r\n        }\r\n    }\r\n    toCreateElements(array:any) {\r\n        this.arrayItems = array.map( (element:any,index:any) => \r\n        <li key={index} style={element.style} className='mx-1' data-toggle=\"tooltip\" data-placement=\"right\" title={`value: ${element.value}`}></li>)\r\n        this.setState({arrayToView:this.arrayItems});\r\n    }\r\n    componentDidMount() {\r\n         if (this.state.randomArray.length === 0)  {\r\n             this.createRandomArray(this.state.object);\r\n         }\r\n    }\r\n    createStyles(array:any,first?:any,second?:any) {\r\n        let styledArray = [];\r\n        for (let i=0;i<array.length;i++) {\r\n            if (i === first) {\r\n                let obj = {\r\n                    value:array[i],\r\n                    style: {\r\n                        height:`${array[i]}px`,\r\n                        width:'5px',\r\n                        background:\"#90EE90\",\r\n                        listStyle:'none',\r\n                    }\r\n                }\r\n                styledArray.push(obj)\r\n            }\r\n            else if (i === second) {\r\n                let obj = {\r\n                    value:array[i],\r\n                    style: {\r\n                        height:`${array[i]}px`,\r\n                        width:'5px',\r\n                        background:'red',\r\n                        listStyle:'none',\r\n                    }\r\n                }\r\n                styledArray.push(obj)\r\n            }\r\n            else if (first === \"sorted\") {\r\n                let obj = {\r\n                    value:array[i],\r\n                    style: {\r\n                        height:`${array[i]}px`,\r\n                        width:'5px',\r\n                        background:\"#FF2EC7\",\r\n                        listStyle:'none',\r\n                    }\r\n                }\r\n                styledArray.push(obj)\r\n            }\r\n            else {\r\n                let obj = {\r\n                    value:array[i],\r\n                    style: {\r\n                        height:`${array[i]}px`,\r\n                        width:'5px',\r\n                        background:\"blue\",\r\n                        listStyle:'none',\r\n                    }\r\n                }\r\n                styledArray.push(obj)\r\n            }\r\n        }\r\n        this.toCreateElements(styledArray);\r\n    }\r\n    updateData(data:any) {\r\n        this.setState({object:data})\r\n    }\r\n    callSort() {\r\n        const object:any = this.state.object;\r\n        const array:any = this.state.randomArray;\r\n        switch(object.method) {\r\n            case \"Merge Sort\":\r\n                this.sortElement.mergeSort(array);\r\n                break;\r\n            case \"Insertion Sort\":\r\n                this.InsertionSortRefElement.sort(array,object.type);\r\n                break;\r\n            case \"Bubble Sort\":\r\n                this.bubbleSortRefElement.toSort(array,object.type)\r\n                break;\r\n            case \"Heap Sort\":\r\n                this.heapRefElement.toCall(array,object.type);\r\n                break;  \r\n            case \"selection Sort\":\r\n                this.selectionSortRefElement.sort(array,object.type);    \r\n                break;\r\n            case \"Quick Sort\" :\r\n                this.quickSortRefElement.sort(array,object.type)\r\n                break;\r\n        }\r\n    }\r\n    createRandomArray(object:any) {\r\n        let array = [];\r\n        for (let i=0;i<object.value;i++) {\r\n            const value = Math.round(Math.random() * (600 - 100) + 10);\r\n            array.push(value)\r\n        }\r\n        this.createStyles(array)\r\n        this.setState({randomArray:array,object:object})\r\n        \r\n    }\r\n    callMergeSort = (element:any) => {\r\n        this.sortElement = element\r\n    }\r\n    heapSortRef = (element:any) => {\r\n        this.heapRefElement = element\r\n    }\r\n    insertionSortRef = (element:any) => {\r\n        this.InsertionSortRefElement = element;\r\n    }\r\n    bubbleSort = (element:any) => {\r\n        this.bubbleSortRefElement = element;\r\n    }\r\n    selectionSortRef = (element:any) => {\r\n        this.selectionSortRefElement = element;\r\n    }\r\n    quickSortRef = (element: any) => {\r\n        this.quickSortRefElement = element;\r\n    }\r\n    toViewCallBack = (value:any,i?:any,j?:any) => {\r\n        this.createStyles(value,i,j)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className='d-flex justify-content-center'>{this.arrayItems}</ul>\r\n                <BubbleSort ref={this.bubbleSort} getChild={this.toViewCallBack}/>\r\n                <MergeSort ref= {this.callMergeSort} getChild={this.toViewCallBack}/>\r\n                <HeapSort ref={this.heapSortRef} getChild={this.toViewCallBack}/>\r\n                <QuickSort ref={this.quickSortRef} getChild={this.toViewCallBack}/>\r\n                <InsertionSort ref={this.insertionSortRef} getChild={this.toViewCallBack}/>\r\n                <SelectionSort ref={this.selectionSortRef} getChild={this.toViewCallBack}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport './App.css';\nimport TopNavigation from './components/navigation/TopNavigation';\nimport Main from './components/main/Main';\n\ninterface IMyComponentProps {}\n\ninterface IMyComponentState {\n  receivedvalue: any\n}\n\nclass App extends React.Component <IMyComponentProps, IMyComponentState>{\n\n  refElement:any;\n\n  constructor(props:IMyComponentProps) {\n    super(props);\n\n    this.state = {\n      receivedvalue : 30\n    };\n  }\n  setRef = (element:any) => { // this method for creating reference for main component\n    this.refElement = element\n  }\n  getData = (value:any) => { // get data from top navigation component.\n    this.setState({receivedvalue:value})\n    this.refElement.createRandomArray(value)\n  }\n  updateData = (value:any) => {\n    this.setState({receivedvalue:value});\n    this.refElement.updateData(value)\n  }\n  toMainStart = () => {\n    this.refElement.callSort()\n  }\n  render() {\n    return(\n      <main>\n        <TopNavigation sendData ={this.getData} updateData = {this.updateData} startSorting={this.toMainStart}/>\n        <Main ref = {this.setRef}/>\n      </main>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}